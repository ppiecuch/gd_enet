#!/usr/bin/env python

Import("env")
Import("env_modules")

env_module = env_modules.Clone()
env_module.Append(CPPPATH=["penet/include"])

if env["platform"] == "windows":
    if env["CC"] == "cl":
        env_module.Append(LINKFLAGS=["ws2_32.lib"])
    else:
        env_module.Append(LIBS=["ws2_32"])

if env["platform"] == "x11" or env["platform"] == "server" or env["platform"] == "osx":
    env_module.Append(CPPDEFINES="-DHAS_FCNTL=1")
    env_module.Append(CPPDEFINES="-DHAS_POLL=1")
    env_module.Append(CPPDEFINES="-DHAS_GETNAMEINFO=1")
    env_module.Append(CPPDEFINES="-DHAS_GETADDRINFO=1")
    env_module.Append(CPPDEFINES="-DHAS_GETHOSTBYNAME_R=1")
    env_module.Append(CPPDEFINES="-DHAS_GETHOSTBYADDR_R=1")
    env_module.Append(CPPDEFINES="-DHAS_INET_PTON=1")
    env_module.Append(CPPDEFINES="-DHAS_INET_NTOP=1")
    env_module.Append(CPPDEFINES="-DHAS_MSGHDR_FLAGS=1")
    env_module.Append(CPPDEFINES="-DHAS_SOCKLEN_T=1")

sources = Glob("*.cpp")
sources += Glob("penet/*.cpp")

# Compile as a static library
lib = env_module.Library("gd_enet", sources)
# Add the library as a dependency of the final executable
env.Prepend(LIBS=[lib])
